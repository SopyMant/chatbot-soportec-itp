'use strict';

var bot = require('@builderbot/bot');
var mongodb = require('mongodb');

class MongoAdapter extends bot.MemoryDB {
    constructor(_credentials) {
        super();
        this.db = null;
        this.listHistory = [];
        this.credentials = { dbUri: null, dbName: null };
        this.init = async () => {
            try {
                const client = new mongodb.MongoClient(this.credentials.dbUri, {});
                await client.connect();
                console.log(`ðŸ†— Connection successfully established`);
                const db = client.db(this.credentials.dbName);
                this.db = db;
                return true;
            }
            catch (e) {
                console.log('Error', e);
                return;
            }
        };
        this.getPrevByNumber = async (from) => {
            const result = await this.db.collection('history').find({ from }).sort({ _id: -1 }).limit(1).toArray();
            return result[0];
        };
        this.save = async (ctx) => {
            this.listHistory.push(ctx);
            const ctxWithDate = {
                ...ctx,
                date: new Date(),
            };
            await this.db.collection('history').insertOne(ctxWithDate);
        };
        this.credentials = _credentials;
        this.init().then();
    }
}

exports.MongoAdapter = MongoAdapter;
